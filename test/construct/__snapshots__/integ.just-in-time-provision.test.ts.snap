// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Integration test JustInTimeProvision 1`] = `
Object {
  "Parameters": Object {
    "AssetParameters14596ab4510e2f9fb80d4d39f8c49091ec1ffdd6499c4670e8f4c003b626ac13ArtifactHashA12E88F1": Object {
      "Description": "Artifact hash for asset \\"14596ab4510e2f9fb80d4d39f8c49091ec1ffdd6499c4670e8f4c003b626ac13\\"",
      "Type": "String",
    },
    "AssetParameters14596ab4510e2f9fb80d4d39f8c49091ec1ffdd6499c4670e8f4c003b626ac13S3BucketD2B4055D": Object {
      "Description": "S3 bucket for asset \\"14596ab4510e2f9fb80d4d39f8c49091ec1ffdd6499c4670e8f4c003b626ac13\\"",
      "Type": "String",
    },
    "AssetParameters14596ab4510e2f9fb80d4d39f8c49091ec1ffdd6499c4670e8f4c003b626ac13S3VersionKey5D59E90B": Object {
      "Description": "S3 key for asset version \\"14596ab4510e2f9fb80d4d39f8c49091ec1ffdd6499c4670e8f4c003b626ac13\\"",
      "Type": "String",
    },
    "AssetParametersa2441146148e206e3deefa61018d826702e5a45b3ba7430e04870aca29d07e47ArtifactHashBB8ED4ED": Object {
      "Description": "Artifact hash for asset \\"a2441146148e206e3deefa61018d826702e5a45b3ba7430e04870aca29d07e47\\"",
      "Type": "String",
    },
    "AssetParametersa2441146148e206e3deefa61018d826702e5a45b3ba7430e04870aca29d07e47S3BucketE086D507": Object {
      "Description": "S3 bucket for asset \\"a2441146148e206e3deefa61018d826702e5a45b3ba7430e04870aca29d07e47\\"",
      "Type": "String",
    },
    "AssetParametersa2441146148e206e3deefa61018d826702e5a45b3ba7430e04870aca29d07e47S3VersionKeyB405E53A": Object {
      "Description": "S3 key for asset version \\"a2441146148e206e3deefa61018d826702e5a45b3ba7430e04870aca29d07e47\\"",
      "Type": "String",
    },
    "AssetParametersb963139eaf0875244ff2c67d639656de4dcfb79b3563119b8d8acf7e8d506562ArtifactHashA189C2DA": Object {
      "Description": "Artifact hash for asset \\"b963139eaf0875244ff2c67d639656de4dcfb79b3563119b8d8acf7e8d506562\\"",
      "Type": "String",
    },
    "AssetParametersb963139eaf0875244ff2c67d639656de4dcfb79b3563119b8d8acf7e8d506562S3Bucket91217B80": Object {
      "Description": "S3 bucket for asset \\"b963139eaf0875244ff2c67d639656de4dcfb79b3563119b8d8acf7e8d506562\\"",
      "Type": "String",
    },
    "AssetParametersb963139eaf0875244ff2c67d639656de4dcfb79b3563119b8d8acf7e8d506562S3VersionKeyBA296D36": Object {
      "Description": "S3 key for asset version \\"b963139eaf0875244ff2c67d639656de4dcfb79b3563119b8d8acf7e8d506562\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "JustInTimeProvisiontestcaseCaRegistratortestcase21FFC435": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "iam:PassRole",
                "iot:RegisterCACertificate",
                "iot:GetRegistrationCode",
                "iot:CreateTopicRule",
                "iot:TagResource",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "JustInTimeProvisiontestcaseCaRegistratortestcase21FFC435",
        "Roles": Array [
          Object {
            "Ref": "JustInTimeProvisiontestcaseCaRegistratortestcaseServiceRoleFB1CB993",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "JustInTimeProvisiontestcaseCaRegistratortestcase93903A27": Object {
      "DependsOn": Array [
        "JustInTimeProvisiontestcaseCaRegistratortestcaseServiceRoleDefaultPolicy8C8AE893",
        "JustInTimeProvisiontestcaseCaRegistratortestcaseServiceRoleFB1CB993",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters14596ab4510e2f9fb80d4d39f8c49091ec1ffdd6499c4670e8f4c003b626ac13S3BucketD2B4055D",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters14596ab4510e2f9fb80d4d39f8c49091ec1ffdd6499c4670e8f4c003b626ac13S3VersionKey5D59E90B",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters14596ab4510e2f9fb80d4d39f8c49091ec1ffdd6499c4670e8f4c003b626ac13S3VersionKey5D59E90B",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "BUCKET_NAME": Object {
              "Fn::ImportValue": "another-stack:ExportsOutputRefcaBucketD1A50B2B031F53FA",
            },
            "BUCKET_PREFIX": "test",
            "REGISTRATION_CONFIG_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "JustInTimeProvisiontestcaseProvisionRoleRegistrationConfigRoletestcaseE8C566C2",
                "Arn",
              ],
            },
            "VERIFIERS": "\\"[]\\"",
          },
        },
        "Handler": "index.handler",
        "MemorySize": 256,
        "Role": Object {
          "Fn::GetAtt": Array [
            "JustInTimeProvisiontestcaseCaRegistratortestcaseServiceRoleFB1CB993",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 10,
      },
      "Type": "AWS::Lambda::Function",
    },
    "JustInTimeProvisiontestcaseCaRegistratortestcaseServiceRoleDefaultPolicy8C8AE893": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::ImportValue": "another-stack:ExportsOutputFnGetAttcaBucketD1A50B2BArn68FC0213",
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "another-stack:ExportsOutputFnGetAttcaBucketD1A50B2BArn68FC0213",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "JustInTimeProvisiontestcaseCaRegistratortestcaseServiceRoleDefaultPolicy8C8AE893",
        "Roles": Array [
          Object {
            "Ref": "JustInTimeProvisiontestcaseCaRegistratortestcaseServiceRoleFB1CB993",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "JustInTimeProvisiontestcaseCaRegistratortestcaseServiceRoleFB1CB993": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "JustInTimeProvisiontestcaseDeviceCertificateGeneratortestcase625C5945": Object {
      "DependsOn": Array [
        "JustInTimeProvisiontestcaseDeviceCertificateGeneratortestcaseServiceRoleDefaultPolicyB8C16E44",
        "JustInTimeProvisiontestcaseDeviceCertificateGeneratortestcaseServiceRoleCA89F5E4",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersa2441146148e206e3deefa61018d826702e5a45b3ba7430e04870aca29d07e47S3BucketE086D507",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersa2441146148e206e3deefa61018d826702e5a45b3ba7430e04870aca29d07e47S3VersionKeyB405E53A",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersa2441146148e206e3deefa61018d826702e5a45b3ba7430e04870aca29d07e47S3VersionKeyB405E53A",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "BUCKET_NAME": Object {
              "Fn::ImportValue": "another-stack:ExportsOutputRefcaBucketD1A50B2B031F53FA",
            },
            "BUCKET_PREFIX": "test",
          },
        },
        "Handler": "index.handler",
        "MemorySize": 256,
        "Role": Object {
          "Fn::GetAtt": Array [
            "JustInTimeProvisiontestcaseDeviceCertificateGeneratortestcaseServiceRoleCA89F5E4",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 10,
      },
      "Type": "AWS::Lambda::Function",
    },
    "JustInTimeProvisiontestcaseDeviceCertificateGeneratortestcasePolicyDeviceCertificateGeneratortestcaseD0261C2C": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "iot:DescribeThing",
                "iot:DeleteCertificate",
                "iot:DeleteThing",
                "iot:DescribeCACertificate",
                "iot:ListTagsForResource",
                "iot:DescribeEndpoint",
                "lambda:InvokeFunction",
                "lambda:InvokeAsync",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "JustInTimeProvisiontestcaseDeviceCertificateGeneratortestcasePolicyDeviceCertificateGeneratortestcaseD0261C2C",
        "Roles": Array [
          Object {
            "Ref": "JustInTimeProvisiontestcaseDeviceCertificateGeneratortestcaseServiceRoleCA89F5E4",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "JustInTimeProvisiontestcaseDeviceCertificateGeneratortestcaseServiceRoleCA89F5E4": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "JustInTimeProvisiontestcaseDeviceCertificateGeneratortestcaseServiceRoleDefaultPolicyB8C16E44": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::ImportValue": "another-stack:ExportsOutputFnGetAttcaBucketD1A50B2BArn68FC0213",
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "another-stack:ExportsOutputFnGetAttcaBucketD1A50B2BArn68FC0213",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "JustInTimeProvisiontestcaseDeviceCertificateGeneratortestcaseServiceRoleDefaultPolicyB8C16E44",
        "Roles": Array [
          Object {
            "Ref": "JustInTimeProvisiontestcaseDeviceCertificateGeneratortestcaseServiceRoleCA89F5E4",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "JustInTimeProvisiontestcaseProvisionRoleRegistrationConfigRoletestcaseE8C566C2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "iot.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSIoTThingsRegistration",
              ],
            ],
          },
        ],
        "RoleName": "ProvisionRoleName-RegistrationConfigRole-test-case",
      },
      "Type": "AWS::IAM::Role",
    },
    "JustInTimeProvisiontestcaseVerifiersFetchertestcase669A84BA": Object {
      "DependsOn": Array [
        "JustInTimeProvisiontestcaseVerifiersFetchertestcaseServiceRole9B13C41F",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersb963139eaf0875244ff2c67d639656de4dcfb79b3563119b8d8acf7e8d506562S3Bucket91217B80",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersb963139eaf0875244ff2c67d639656de4dcfb79b3563119b8d8acf7e8d506562S3VersionKeyBA296D36",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersb963139eaf0875244ff2c67d639656de4dcfb79b3563119b8d8acf7e8d506562S3VersionKeyBA296D36",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "VERIFIERS": "\\"[]\\"",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "JustInTimeProvisiontestcaseVerifiersFetchertestcaseServiceRole9B13C41F",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "JustInTimeProvisiontestcaseVerifiersFetchertestcaseServiceRole9B13C41F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;
