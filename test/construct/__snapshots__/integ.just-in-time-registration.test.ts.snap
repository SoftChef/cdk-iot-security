// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Integration test JustInTimeRegistration 1`] = `
Object {
  "Parameters": Object {
    "AssetParameters0365af4597210005bb0867f952dafb61af7917db1acac25cefe754c3d593a560ArtifactHash4E49543C": Object {
      "Description": "Artifact hash for asset \\"0365af4597210005bb0867f952dafb61af7917db1acac25cefe754c3d593a560\\"",
      "Type": "String",
    },
    "AssetParameters0365af4597210005bb0867f952dafb61af7917db1acac25cefe754c3d593a560S3Bucket5647444C": Object {
      "Description": "S3 bucket for asset \\"0365af4597210005bb0867f952dafb61af7917db1acac25cefe754c3d593a560\\"",
      "Type": "String",
    },
    "AssetParameters0365af4597210005bb0867f952dafb61af7917db1acac25cefe754c3d593a560S3VersionKey6BDA865B": Object {
      "Description": "S3 key for asset version \\"0365af4597210005bb0867f952dafb61af7917db1acac25cefe754c3d593a560\\"",
      "Type": "String",
    },
    "AssetParameters04826d0ce930819d1ce3bb3b537f455bbcc75c5ce2cc343218f68800c483b0c3ArtifactHashEF4CFD17": Object {
      "Description": "Artifact hash for asset \\"04826d0ce930819d1ce3bb3b537f455bbcc75c5ce2cc343218f68800c483b0c3\\"",
      "Type": "String",
    },
    "AssetParameters04826d0ce930819d1ce3bb3b537f455bbcc75c5ce2cc343218f68800c483b0c3S3Bucket11EF0E02": Object {
      "Description": "S3 bucket for asset \\"04826d0ce930819d1ce3bb3b537f455bbcc75c5ce2cc343218f68800c483b0c3\\"",
      "Type": "String",
    },
    "AssetParameters04826d0ce930819d1ce3bb3b537f455bbcc75c5ce2cc343218f68800c483b0c3S3VersionKey9111D89E": Object {
      "Description": "S3 key for asset version \\"04826d0ce930819d1ce3bb3b537f455bbcc75c5ce2cc343218f68800c483b0c3\\"",
      "Type": "String",
    },
    "AssetParameters0f58288e66ae1d7e808eb27f0904f4ed571a6c77756f46bc085c43759cfb5416ArtifactHashC8908DEE": Object {
      "Description": "Artifact hash for asset \\"0f58288e66ae1d7e808eb27f0904f4ed571a6c77756f46bc085c43759cfb5416\\"",
      "Type": "String",
    },
    "AssetParameters0f58288e66ae1d7e808eb27f0904f4ed571a6c77756f46bc085c43759cfb5416S3Bucket598E8769": Object {
      "Description": "S3 bucket for asset \\"0f58288e66ae1d7e808eb27f0904f4ed571a6c77756f46bc085c43759cfb5416\\"",
      "Type": "String",
    },
    "AssetParameters0f58288e66ae1d7e808eb27f0904f4ed571a6c77756f46bc085c43759cfb5416S3VersionKeyD9607AD0": Object {
      "Description": "S3 key for asset version \\"0f58288e66ae1d7e808eb27f0904f4ed571a6c77756f46bc085c43759cfb5416\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "JustInTimeRegistrationtestcaseCaRegistratortestcase40DBE3A2": Object {
      "DependsOn": Array [
        "JustInTimeRegistrationtestcaseCaRegistratortestcaseServiceRoleDefaultPolicy816F422E",
        "JustInTimeRegistrationtestcaseCaRegistratortestcaseServiceRole8F8171C3",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters0f58288e66ae1d7e808eb27f0904f4ed571a6c77756f46bc085c43759cfb5416S3Bucket598E8769",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters0f58288e66ae1d7e808eb27f0904f4ed571a6c77756f46bc085c43759cfb5416S3VersionKeyD9607AD0",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters0f58288e66ae1d7e808eb27f0904f4ed571a6c77756f46bc085c43759cfb5416S3VersionKeyD9607AD0",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "BUCKET_NAME": Object {
              "Fn::ImportValue": "another-stack:ExportsOutputRefuserProvidedBucket2349EF2D343936C6",
            },
            "BUCKET_PREFIX": "test",
            "VERIFIERS": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "[\\"",
                  Object {
                    "Fn::ImportValue": "verifier-stack:ExportsOutputReftestcase9BC7DE4DD4B50F74",
                  },
                  "\\"]",
                ],
              ],
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 256,
        "Role": Object {
          "Fn::GetAtt": Array [
            "JustInTimeRegistrationtestcaseCaRegistratortestcaseServiceRole8F8171C3",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 10,
      },
      "Type": "AWS::Lambda::Function",
    },
    "JustInTimeRegistrationtestcaseCaRegistratortestcaseDE8814EE": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "iam:PassRole",
                "iot:RegisterCACertificate",
                "iot:GetRegistrationCode",
                "iot:CreateTopicRule",
                "iot:TagResource",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "JustInTimeRegistrationtestcaseCaRegistratortestcaseDE8814EE",
        "Roles": Array [
          Object {
            "Ref": "JustInTimeRegistrationtestcaseCaRegistratortestcaseServiceRole8F8171C3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "JustInTimeRegistrationtestcaseCaRegistratortestcaseServiceRole8F8171C3": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "JustInTimeRegistrationtestcaseCaRegistratortestcaseServiceRoleDefaultPolicy816F422E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::ImportValue": "another-stack:ExportsOutputFnGetAttuserProvidedBucket2349EF2DArnA89CCA27",
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::ImportValue": "another-stack:ExportsOutputFnGetAttuserProvidedBucket2349EF2DArnA89CCA27",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "JustInTimeRegistrationtestcaseCaRegistratortestcaseServiceRoleDefaultPolicy816F422E",
        "Roles": Array [
          Object {
            "Ref": "JustInTimeRegistrationtestcaseCaRegistratortestcaseServiceRole8F8171C3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "JustInTimeRegistrationtestcaseDeviceActivatortestcaseBE99699A": Object {
      "DependsOn": Array [
        "JustInTimeRegistrationtestcaseDeviceActivatortestcaseServiceRoleDefaultPolicyD0151B2D",
        "JustInTimeRegistrationtestcaseDeviceActivatortestcaseServiceRoleCD94255D",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters04826d0ce930819d1ce3bb3b537f455bbcc75c5ce2cc343218f68800c483b0c3S3Bucket11EF0E02",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters04826d0ce930819d1ce3bb3b537f455bbcc75c5ce2cc343218f68800c483b0c3S3VersionKey9111D89E",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters04826d0ce930819d1ce3bb3b537f455bbcc75c5ce2cc343218f68800c483b0c3S3VersionKey9111D89E",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "JustInTimeRegistrationtestcaseDeviceActivatortestcaseServiceRoleCD94255D",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "JustInTimeRegistrationtestcaseDeviceActivatortestcasePolicyDeviceActivatortestcaseE698297C": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "iot:DescribeCertificate",
                "iot:DescribeCACertificate",
                "iot:ListTagsForResource",
                "iot:CreateThing",
                "iot:CreatePolicy",
                "iot:AttachPolicy",
                "iot:AttachThingPrincipal",
                "iot:UpdateCertificate",
                "lambda:InvokeFunction",
                "lambda:InvokeAsync",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "JustInTimeRegistrationtestcaseDeviceActivatortestcasePolicyDeviceActivatortestcaseE698297C",
        "Roles": Array [
          Object {
            "Ref": "JustInTimeRegistrationtestcaseDeviceActivatortestcaseServiceRoleCD94255D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "JustInTimeRegistrationtestcaseDeviceActivatortestcaseServiceRoleCD94255D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "JustInTimeRegistrationtestcaseDeviceActivatortestcaseServiceRoleDefaultPolicyD0151B2D": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "JustInTimeRegistrationtestcaseReviewReceptortestcaseAB8D5DFE",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "JustInTimeRegistrationtestcaseDeviceActivatortestcaseServiceRoleDefaultPolicyD0151B2D",
        "Roles": Array [
          Object {
            "Ref": "JustInTimeRegistrationtestcaseDeviceActivatortestcaseServiceRoleCD94255D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "JustInTimeRegistrationtestcaseDeviceActivatortestcaseSqsEventSourceteststackJustInTimeRegistrationtestcaseReviewReceptortestcase3523F08BEF2BA3A9": Object {
      "Properties": Object {
        "BatchSize": 1,
        "EventSourceArn": Object {
          "Fn::GetAtt": Array [
            "JustInTimeRegistrationtestcaseReviewReceptortestcaseAB8D5DFE",
            "Arn",
          ],
        },
        "FunctionName": Object {
          "Ref": "JustInTimeRegistrationtestcaseDeviceActivatortestcaseBE99699A",
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "JustInTimeRegistrationtestcaseReviewReceptortestcaseAB8D5DFE": Object {
      "DeletionPolicy": "Delete",
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "JustInTimeRegistrationtestcaseReviewReceptortestcaseReviewAcceptionRoletestcaseA3AF3CD4": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "iot.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "sqs:SendMessageBatch",
                    "sqs:SendMessage",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::GetAtt": Array [
                      "JustInTimeRegistrationtestcaseReviewReceptortestcaseAB8D5DFE",
                      "Arn",
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "SqsPushPolicy",
          },
        ],
        "RoleName": "ReviewAcceptionRoleName-test-case",
      },
      "Type": "AWS::IAM::Role",
    },
    "JustInTimeRegistrationtestcaseReviewReceptortestcaseTopicRuletestcaseB619B96E": Object {
      "Properties": Object {
        "TopicRulePayload": Object {
          "Actions": Array [
            Object {
              "Sqs": Object {
                "QueueUrl": Object {
                  "Ref": "JustInTimeRegistrationtestcaseReviewReceptortestcaseAB8D5DFE",
                },
                "RoleArn": Object {
                  "Fn::GetAtt": Array [
                    "JustInTimeRegistrationtestcaseReviewReceptortestcaseReviewAcceptionRoletestcaseA3AF3CD4",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Sql": "SELECT * FROM '$aws/events/certificates/registered/#'",
        },
      },
      "Type": "AWS::IoT::TopicRule",
    },
    "JustInTimeRegistrationtestcaseVerifiersFetchertestcase4F2CFBBA": Object {
      "DependsOn": Array [
        "JustInTimeRegistrationtestcaseVerifiersFetchertestcaseServiceRoleFE2AC6E2",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters0365af4597210005bb0867f952dafb61af7917db1acac25cefe754c3d593a560S3Bucket5647444C",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters0365af4597210005bb0867f952dafb61af7917db1acac25cefe754c3d593a560S3VersionKey6BDA865B",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters0365af4597210005bb0867f952dafb61af7917db1acac25cefe754c3d593a560S3VersionKey6BDA865B",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "VERIFIERS": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "[\\"",
                  Object {
                    "Fn::ImportValue": "verifier-stack:ExportsOutputReftestcase9BC7DE4DD4B50F74",
                  },
                  "\\"]",
                ],
              ],
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "JustInTimeRegistrationtestcaseVerifiersFetchertestcaseServiceRoleFE2AC6E2",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "JustInTimeRegistrationtestcaseVerifiersFetchertestcaseServiceRoleFE2AC6E2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;
